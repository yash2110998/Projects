import matplotlib.pyplot as plt
import numpy as np

#xpoints = np.array([0,10])
#ypoints = np.array([0,300])

#plt.plot(xpoints, ypoints)
#plt.show()

#If we need to plot a line from (1, 3) to (8, 10), we have to pass two arrays [1, 8] and [3, 10] to the plot function.

#xpoints = np.array([1,8])
#ypoints = np.array([3,10])

#plt.plot(xpoints, ypoints,  'o' )
#plt.show()

#xpoints = np.array([1,2,6,8,12,15,18])
#ypoints = np.array([3,8,1,10,9,11,13])
#plt.plot(xpoints, ypoints, 'o')
#plt.show()
#xpoints = np.array([1,2,6,8,12,15,18])
#ypoints = np.array([3,8,1,10,9,11,13])
#plt.plot(xpoints, ypoints, 'h-.c', ms = 30, mec= 'b')
#plt.show()



#ypoints = np.array([3, 8, 1, 10])

#plt.plot(ypoints, marker = 'o', ms = 20, mfc = 'r')
#plt.show()

#ypoints = np.array([3, 8, 1, 10])

#plt.plot(ypoints, marker = 'o', ms = 20, mec = 'r', mfc = 'r')
#plt.show()

#ypoints = np.array([3, 8, 1, 10])

#plt.plot(ypoints, linestyle = 'dotted')
#plt.show()

#plt.plot(ypoints, linestyle = 'dashed')

#plt.plot(ypoints, ls = ':')

#ypoints = np.array([3, 8, 1, 10])

#plt.plot(ypoints, linewidth = '20.5')
#plt.show()

#x = np.array([3, 8, 1, 10])
#y = np.array([6, 2, 7, 12])

#plt.plot(x)
#plt.plot(y)

#plt.show()

#x1 = np.array([0, 1, 2, 3])
#y1 = np.array([3, 8, 1, 10])
#x2 = np.array([0, 1, 2, 3])
#y2 = np.array([6, 2, 7, 11])

#plt.plot(x1, y1, x2, y2)
#plt.show()

#x = np.array([80, 85, 90, 95, 100, 105, 110, 115, 120, 125])
#y = np.array([240, 250, 260, 270, 280, 290, 300, 310, 320, 330])

#font1 = {'family':'serif','color':'blue','size':20}
#font2 = {'family':'serif','color':'darkred','size':15}



#plt.title("Sports Watch Data", loc = 'center', fontdict = font1)
#plt.xlabel("average pulse", fontdict = font2)
#plt.ylabel("calorie burnage", fontdict = font2)

#plt.plot(x,y)
#plt.grid(color = 'green', linestyle = '--', linewidth = 0.5)
#plt.show()

#The subplot() function takes three arguments that describes the layout of the figure.
#The layout is organized in rows and columns, which are represented by the first and second argument.
#The third argument represents the index of the current plot.

#plt.subplot(1, 2, 1)
#the figure has 1 row, 2 columns, and this plot is the first plot.
#plt.subplot(1, 2, 2)
#the figure has 1 row, 2 columns, and this plot is the second plot.

#plot 1:
#x = np.array([0, 1, 2, 3])
#y = np.array([3, 8, 1, 10])

#plt.subplot(2, 1, 1)
#plt.plot(x,y)

#plot 2:
# = np.array([0, 1, 2, 3])
#y = np.array([10, 20, 30, 40])

#plt.subplot(2, 1, 2)
#plt.plot(x,y)

#plt.show()

#x = np.array([0, 1, 2, 3])
#y = np.array([3, 8, 1, 10])

#plt.subplot(2, 3, 1)
#plt.plot(x,y)
#plt.title("FirstPlot")

#x = np.array([0, 1, 2, 3])
#y = np.array([10, 20, 30, 40])

#plt.subplot(2, 3, 2)
#plt.plot(x,y)
#plt.title("SecondPlot")

#x = np.array([0, 1, 2, 3])
#y = np.array([3, 8, 1, 10])

#plt.subplot(2, 3, 3)
#plt.plot(x,y)
#plt.title("ThirdPlot")

#x = np.array([0, 1, 2, 3])
#y = np.array([10, 20, 30, 40])

#plt.subplot(2, 3, 4)
#plt.plot(x,y)
#plt.title("FourthPlot")

#x = np.array([0, 1, 2, 3])
#y = np.array([3, 8, 1, 10])

#plt.subplot(2, 3, 5)
#plt.plot(x,y)
#plt.title("FifthPlot")

#x = np.array([0, 1, 2, 3])
#y = np.array([10, 20, 30, 40])

#plt.subplot(2, 3, 6)
#plt.plot(x,y)
#plt.title("SixthPlot")

#plt.suptitle("SubPlotsDemo")
#plt.show()

#x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
#y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])

#plt.scatter(x, y)
#plt.show()

#day one, the age and speed of 13 cars:
#x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
#y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
#plt.scatter(x, y, color = 'hotpink')

#day two, the age and speed of 15 cars:
#x = np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])
#y = np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])
#plt.scatter(x, y, color= 'cyan')

#plt.show()

#Color Each dot


#x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
#y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
#colors = np.array(["red","green","blue","yellow","pink","black","orange","purple","beige","brown","gray","cyan","magenta"])

#plt.scatter(x, y, c=colors)

#plt.show()

#ColorMap-- Virdis creating a color array


#x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
#y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
#colors = np.array([0, 10, 20, 30, 40, 45, 50, 55, 60, 70, 80, 90, 100])

#plt.scatter(x, y, c=colors, cmap='viridis')
#plt.colorbar()
#plt.show()

#alpha argument is used to adjust transparency of dots
#sizes of dots can be adjusted with s argument

#x = np.random.randint(100, size=(100))
#y = np.random.randint(100, size=(100))
#colors = np.random.randint(100, size=(100))
#sizes = 10 * np.random.randint(100, size=(100))

#plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral')

#plt.colorbar()

#plt.show()


##PieCharts in Python##

#y = np.array([35,25,15,20,5])
#mylabels = ["Apple", "Realme", "Samsung", "Nothing", "Lava"]

#plt.pie(y, labels=mylabels, startangle=90)
#plt.show()

#y = np.array([35, 25, 25, 15])
#mylabels = ["Apples", "Bananas", "Cherries", "Dates"]
#myexplode = [0.2, 0, 0, 0]

#plt.pie(y, labels = mylabels, explode = myexplode)
#plt.show() 

#y = np.array([35, 25, 25, 15])
#mylabels = ["Apples", "Bananas", "Cherries", "Dates"]
#mycolors = ["black", "hotpink", "b", "#4CAF50"]

#plt.pie(y, labels = mylabels, colors = mycolors)
#plt.show() 

#y = np.array([35, 25, 25, 15])
#mylabels = ["Apples", "Bananas", "Cherries", "Dates"]

#plt.pie(y, labels = mylabels)
#plt.legend()
#plt.show()


#y = np.array([35, 25, 25, 15])
#mylabels = ["Apples", "Bananas", "Cherries", "Dates"]

#plt.pie(y, labels = mylabels)
#plt.legend(title = "Four Fruits:")
#plt.show() 

#Plotting a Histogram

x = np.random.normal(170,10,250)
plt.hist(x)
plt.show()

#plotting Bar Chart

x = np.array(["A", "B", "C", "D"])
y = np.array([3, 8, 1, 10])

plt.barh(x, y, height = 0.5, color= "cyan")
plt.show()

x = np.array(["A", "B", "C", "D"])
y = np.array([3, 8, 1, 10])

plt.bar(x, y, width = 0.1, color= "Violet")
plt.show()
